// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a LaunchDarkly webhook data source.
 *
 * This data source allows you to retrieve webhook information from your LaunchDarkly organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as launchdarkly from "@pulumi/launchdarkly";
 *
 * const example = launchdarkly.getWebhook({
 *     id: "57c0af6099690907435299",
 * });
 * ```
 */
export function getWebhook(args: GetWebhookArgs, opts?: pulumi.InvokeOptions): Promise<GetWebhookResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("launchdarkly:index/getWebhook:getWebhook", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getWebhook.
 */
export interface GetWebhookArgs {
    /**
     * The unique webhook ID.
     */
    id: string;
}

/**
 * A collection of values returned by getWebhook.
 */
export interface GetWebhookResult {
    /**
     * The unique webhook ID.
     */
    readonly id: string;
    /**
     * The webhook's human-readable name.
     */
    readonly name: string;
    /**
     * Whether the webhook is enabled.
     */
    readonly on: boolean;
    /**
     * The secret used to sign the webhook.
     */
    readonly secret: string;
    /**
     * List of policy statement blocks used to filter webhook events. For more information on webhook policy filters read [Adding a policy filter](https://docs.launchdarkly.com/integrations/webhooks#adding-a-policy-filter).
     */
    readonly statements: outputs.GetWebhookStatement[];
    /**
     * Tags associated with your resource.
     */
    readonly tags: string[];
    /**
     * The URL of the remote webhook.
     */
    readonly url: string;
}
/**
 * Provides a LaunchDarkly webhook data source.
 *
 * This data source allows you to retrieve webhook information from your LaunchDarkly organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as launchdarkly from "@pulumi/launchdarkly";
 *
 * const example = launchdarkly.getWebhook({
 *     id: "57c0af6099690907435299",
 * });
 * ```
 */
export function getWebhookOutput(args: GetWebhookOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWebhookResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("launchdarkly:index/getWebhook:getWebhook", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getWebhook.
 */
export interface GetWebhookOutputArgs {
    /**
     * The unique webhook ID.
     */
    id: pulumi.Input<string>;
}
