// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * Provides a LaunchDarkly audit log subscription data source.
 *
 * This data source allows you to retrieve information about LaunchDarkly audit log subscriptions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as launchdarkly from "@pulumi/launchdarkly";
 *
 * const test = launchdarkly.getAuditLogSubscription({
 *     id: "5f0cd446a77cba0b4c5644a7",
 *     integrationKey: "msteams",
 * });
 * ```
 */
export function getAuditLogSubscription(args: GetAuditLogSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetAuditLogSubscriptionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("launchdarkly:index/getAuditLogSubscription:getAuditLogSubscription", {
        "id": args.id,
        "integrationKey": args.integrationKey,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuditLogSubscription.
 */
export interface GetAuditLogSubscriptionArgs {
    /**
     * The audit log subscription ID.
     */
    id: string;
    /**
     * The integration key. Supported integration keys are `chronosphere`, `cloudtrail`, `datadog`, `dynatrace`, `elastic`, `grafana`, `honeycomb`, `kosli`, `last9`, `logdna`, `msteams`, `new-relic-apm`, `signalfx`, `slack`, and `splunk`.
     */
    integrationKey: string;
}

/**
 * A collection of values returned by getAuditLogSubscription.
 */
export interface GetAuditLogSubscriptionResult {
    readonly config: {[key: string]: string};
    /**
     * The audit log subscription ID.
     */
    readonly id: string;
    /**
     * The integration key. Supported integration keys are `chronosphere`, `cloudtrail`, `datadog`, `dynatrace`, `elastic`, `grafana`, `honeycomb`, `kosli`, `last9`, `logdna`, `msteams`, `new-relic-apm`, `signalfx`, `slack`, and `splunk`.
     */
    readonly integrationKey: string;
    /**
     * A human-friendly name for your audit log subscription viewable from within the LaunchDarkly Integrations page.
     */
    readonly name: string;
    /**
     * Whether or not you want your subscription enabled, i.e. to actively send events.
     */
    readonly on: boolean;
    /**
     * A block representing the resources to which you wish to subscribe.
     */
    readonly statements: outputs.GetAuditLogSubscriptionStatement[];
    /**
     * Tags associated with your resource.
     */
    readonly tags: string[];
}
/**
 * Provides a LaunchDarkly audit log subscription data source.
 *
 * This data source allows you to retrieve information about LaunchDarkly audit log subscriptions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as launchdarkly from "@pulumi/launchdarkly";
 *
 * const test = launchdarkly.getAuditLogSubscription({
 *     id: "5f0cd446a77cba0b4c5644a7",
 *     integrationKey: "msteams",
 * });
 * ```
 */
export function getAuditLogSubscriptionOutput(args: GetAuditLogSubscriptionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAuditLogSubscriptionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("launchdarkly:index/getAuditLogSubscription:getAuditLogSubscription", {
        "id": args.id,
        "integrationKey": args.integrationKey,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuditLogSubscription.
 */
export interface GetAuditLogSubscriptionOutputArgs {
    /**
     * The audit log subscription ID.
     */
    id: pulumi.Input<string>;
    /**
     * The integration key. Supported integration keys are `chronosphere`, `cloudtrail`, `datadog`, `dynatrace`, `elastic`, `grafana`, `honeycomb`, `kosli`, `last9`, `logdna`, `msteams`, `new-relic-apm`, `signalfx`, `slack`, and `splunk`.
     */
    integrationKey: pulumi.Input<string>;
}
