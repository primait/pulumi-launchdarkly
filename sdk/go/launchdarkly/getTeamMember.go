// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package launchdarkly

import (
	"context"
	"reflect"

	"github.com/primait/pulumi-launchdarkly/sdk/go/launchdarkly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a LaunchDarkly team member data source.
//
// This data source allows you to retrieve team member information from your LaunchDarkly organization.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/primait/pulumi-launchdarkly/sdk/go/launchdarkly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := launchdarkly.LookupTeamMember(ctx, &launchdarkly.LookupTeamMemberArgs{
//				Email: "example@example.com",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTeamMember(ctx *pulumi.Context, args *LookupTeamMemberArgs, opts ...pulumi.InvokeOption) (*LookupTeamMemberResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTeamMemberResult
	err := ctx.Invoke("launchdarkly:index/getTeamMember:getTeamMember", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTeamMember.
type LookupTeamMemberArgs struct {
	// The unique email address associated with the team member.
	Email string `pulumi:"email"`
	// A role attributes block. One block must be defined per role attribute. The key is the role attribute key and the value is a string array of resource keys that apply.
	RoleAttributes []GetTeamMemberRoleAttribute `pulumi:"roleAttributes"`
}

// A collection of values returned by getTeamMember.
type LookupTeamMemberResult struct {
	// The list of custom roles keys associated with the team member. Custom roles are only available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact LaunchDarkly Sales](https://launchdarkly.com/contact-sales/).
	CustomRoles []string `pulumi:"customRoles"`
	// The unique email address associated with the team member.
	Email string `pulumi:"email"`
	// The team member's given name.
	FirstName string `pulumi:"firstName"`
	// The 24 character alphanumeric ID of the team member.
	Id string `pulumi:"id"`
	// The team member's family name.
	LastName string `pulumi:"lastName"`
	// The role associated with team member. Possible roles are `owner`, `reader`, `writer`, or `admin`.
	Role string `pulumi:"role"`
	// A role attributes block. One block must be defined per role attribute. The key is the role attribute key and the value is a string array of resource keys that apply.
	RoleAttributes []GetTeamMemberRoleAttribute `pulumi:"roleAttributes"`
}

func LookupTeamMemberOutput(ctx *pulumi.Context, args LookupTeamMemberOutputArgs, opts ...pulumi.InvokeOption) LookupTeamMemberResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTeamMemberResultOutput, error) {
			args := v.(LookupTeamMemberArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("launchdarkly:index/getTeamMember:getTeamMember", args, LookupTeamMemberResultOutput{}, options).(LookupTeamMemberResultOutput), nil
		}).(LookupTeamMemberResultOutput)
}

// A collection of arguments for invoking getTeamMember.
type LookupTeamMemberOutputArgs struct {
	// The unique email address associated with the team member.
	Email pulumi.StringInput `pulumi:"email"`
	// A role attributes block. One block must be defined per role attribute. The key is the role attribute key and the value is a string array of resource keys that apply.
	RoleAttributes GetTeamMemberRoleAttributeArrayInput `pulumi:"roleAttributes"`
}

func (LookupTeamMemberOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTeamMemberArgs)(nil)).Elem()
}

// A collection of values returned by getTeamMember.
type LookupTeamMemberResultOutput struct{ *pulumi.OutputState }

func (LookupTeamMemberResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTeamMemberResult)(nil)).Elem()
}

func (o LookupTeamMemberResultOutput) ToLookupTeamMemberResultOutput() LookupTeamMemberResultOutput {
	return o
}

func (o LookupTeamMemberResultOutput) ToLookupTeamMemberResultOutputWithContext(ctx context.Context) LookupTeamMemberResultOutput {
	return o
}

// The list of custom roles keys associated with the team member. Custom roles are only available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact LaunchDarkly Sales](https://launchdarkly.com/contact-sales/).
func (o LookupTeamMemberResultOutput) CustomRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTeamMemberResult) []string { return v.CustomRoles }).(pulumi.StringArrayOutput)
}

// The unique email address associated with the team member.
func (o LookupTeamMemberResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamMemberResult) string { return v.Email }).(pulumi.StringOutput)
}

// The team member's given name.
func (o LookupTeamMemberResultOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamMemberResult) string { return v.FirstName }).(pulumi.StringOutput)
}

// The 24 character alphanumeric ID of the team member.
func (o LookupTeamMemberResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamMemberResult) string { return v.Id }).(pulumi.StringOutput)
}

// The team member's family name.
func (o LookupTeamMemberResultOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamMemberResult) string { return v.LastName }).(pulumi.StringOutput)
}

// The role associated with team member. Possible roles are `owner`, `reader`, `writer`, or `admin`.
func (o LookupTeamMemberResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamMemberResult) string { return v.Role }).(pulumi.StringOutput)
}

// A role attributes block. One block must be defined per role attribute. The key is the role attribute key and the value is a string array of resource keys that apply.
func (o LookupTeamMemberResultOutput) RoleAttributes() GetTeamMemberRoleAttributeArrayOutput {
	return o.ApplyT(func(v LookupTeamMemberResult) []GetTeamMemberRoleAttribute { return v.RoleAttributes }).(GetTeamMemberRoleAttributeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTeamMemberResultOutput{})
}
