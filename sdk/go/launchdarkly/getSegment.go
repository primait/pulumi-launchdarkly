// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package launchdarkly

import (
	"context"
	"reflect"

	"github.com/primait/pulumi-launchdarkly/sdk/go/launchdarkly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a LaunchDarkly segment data source.
//
// This data source allows you to retrieve segment information from your LaunchDarkly organization.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/primait/pulumi-launchdarkly/sdk/go/launchdarkly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := launchdarkly.LookupSegment(ctx, &launchdarkly.LookupSegmentArgs{
//				Key:        "example-segment",
//				ProjectKey: "example-project",
//				EnvKey:     "example-env",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSegment(ctx *pulumi.Context, args *LookupSegmentArgs, opts ...pulumi.InvokeOption) (*LookupSegmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSegmentResult
	err := ctx.Invoke("launchdarkly:index/getSegment:getSegment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSegment.
type LookupSegmentArgs struct {
	// The segment's environment key.
	EnvKey string `pulumi:"envKey"`
	// The unique key that references the segment.
	Key string `pulumi:"key"`
	// The segment's project key.
	ProjectKey string `pulumi:"projectKey"`
}

// A collection of values returned by getSegment.
type LookupSegmentResult struct {
	// The segment's creation date represented as a UNIX epoch timestamp.
	CreationDate int `pulumi:"creationDate"`
	// The description of the segment's purpose.
	Description string `pulumi:"description"`
	// The segment's environment key.
	EnvKey string `pulumi:"envKey"`
	// List of non-user target objects excluded from the segment. This attribute is not valid when `unbounded` is set to `true`.
	ExcludedContexts []GetSegmentExcludedContext `pulumi:"excludedContexts"`
	// List of user keys excluded from the segment. To target on other context kinds, use the excludedContexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
	Excludeds []string `pulumi:"excludeds"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of non-user target objects included in the segment. This attribute is not valid when `unbounded` is set to `true`.
	IncludedContexts []GetSegmentIncludedContext `pulumi:"includedContexts"`
	// List of user keys included in the segment. To target on other context kinds, use the includedContexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
	Includeds []string `pulumi:"includeds"`
	// The unique key that references the segment.
	Key string `pulumi:"key"`
	// The human-friendly name for the segment.
	Name string `pulumi:"name"`
	// The segment's project key.
	ProjectKey string `pulumi:"projectKey"`
	// List of nested custom rule blocks to apply to the segment. This attribute is not valid when `unbounded` is set to `true`.
	Rules []GetSegmentRule `pulumi:"rules"`
	// Tags associated with your resource.
	Tags      []string `pulumi:"tags"`
	Unbounded bool     `pulumi:"unbounded"`
	// For Big Segments, the targeted context kind. If this attribute is not specified it will default to `user`.
	UnboundedContextKind string `pulumi:"unboundedContextKind"`
}

func LookupSegmentOutput(ctx *pulumi.Context, args LookupSegmentOutputArgs, opts ...pulumi.InvokeOption) LookupSegmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSegmentResultOutput, error) {
			args := v.(LookupSegmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("launchdarkly:index/getSegment:getSegment", args, LookupSegmentResultOutput{}, options).(LookupSegmentResultOutput), nil
		}).(LookupSegmentResultOutput)
}

// A collection of arguments for invoking getSegment.
type LookupSegmentOutputArgs struct {
	// The segment's environment key.
	EnvKey pulumi.StringInput `pulumi:"envKey"`
	// The unique key that references the segment.
	Key pulumi.StringInput `pulumi:"key"`
	// The segment's project key.
	ProjectKey pulumi.StringInput `pulumi:"projectKey"`
}

func (LookupSegmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSegmentArgs)(nil)).Elem()
}

// A collection of values returned by getSegment.
type LookupSegmentResultOutput struct{ *pulumi.OutputState }

func (LookupSegmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSegmentResult)(nil)).Elem()
}

func (o LookupSegmentResultOutput) ToLookupSegmentResultOutput() LookupSegmentResultOutput {
	return o
}

func (o LookupSegmentResultOutput) ToLookupSegmentResultOutputWithContext(ctx context.Context) LookupSegmentResultOutput {
	return o
}

// The segment's creation date represented as a UNIX epoch timestamp.
func (o LookupSegmentResultOutput) CreationDate() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSegmentResult) int { return v.CreationDate }).(pulumi.IntOutput)
}

// The description of the segment's purpose.
func (o LookupSegmentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentResult) string { return v.Description }).(pulumi.StringOutput)
}

// The segment's environment key.
func (o LookupSegmentResultOutput) EnvKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentResult) string { return v.EnvKey }).(pulumi.StringOutput)
}

// List of non-user target objects excluded from the segment. This attribute is not valid when `unbounded` is set to `true`.
func (o LookupSegmentResultOutput) ExcludedContexts() GetSegmentExcludedContextArrayOutput {
	return o.ApplyT(func(v LookupSegmentResult) []GetSegmentExcludedContext { return v.ExcludedContexts }).(GetSegmentExcludedContextArrayOutput)
}

// List of user keys excluded from the segment. To target on other context kinds, use the excludedContexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
func (o LookupSegmentResultOutput) Excludeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSegmentResult) []string { return v.Excludeds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSegmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of non-user target objects included in the segment. This attribute is not valid when `unbounded` is set to `true`.
func (o LookupSegmentResultOutput) IncludedContexts() GetSegmentIncludedContextArrayOutput {
	return o.ApplyT(func(v LookupSegmentResult) []GetSegmentIncludedContext { return v.IncludedContexts }).(GetSegmentIncludedContextArrayOutput)
}

// List of user keys included in the segment. To target on other context kinds, use the includedContexts block attribute. This attribute is not valid when `unbounded` is set to `true`.
func (o LookupSegmentResultOutput) Includeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSegmentResult) []string { return v.Includeds }).(pulumi.StringArrayOutput)
}

// The unique key that references the segment.
func (o LookupSegmentResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentResult) string { return v.Key }).(pulumi.StringOutput)
}

// The human-friendly name for the segment.
func (o LookupSegmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The segment's project key.
func (o LookupSegmentResultOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentResult) string { return v.ProjectKey }).(pulumi.StringOutput)
}

// List of nested custom rule blocks to apply to the segment. This attribute is not valid when `unbounded` is set to `true`.
func (o LookupSegmentResultOutput) Rules() GetSegmentRuleArrayOutput {
	return o.ApplyT(func(v LookupSegmentResult) []GetSegmentRule { return v.Rules }).(GetSegmentRuleArrayOutput)
}

// Tags associated with your resource.
func (o LookupSegmentResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSegmentResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupSegmentResultOutput) Unbounded() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSegmentResult) bool { return v.Unbounded }).(pulumi.BoolOutput)
}

// For Big Segments, the targeted context kind. If this attribute is not specified it will default to `user`.
func (o LookupSegmentResultOutput) UnboundedContextKind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSegmentResult) string { return v.UnboundedContextKind }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSegmentResultOutput{})
}
