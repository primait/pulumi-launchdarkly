// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Launchdarkly.Inputs
{

    public sealed class SegmentRuleGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The attribute by which to group contexts together.
        /// </summary>
        [Input("bucketBy")]
        public Input<string>? BucketBy { get; set; }

        [Input("clauses")]
        private InputList<Inputs.SegmentRuleClauseGetArgs>? _clauses;

        /// <summary>
        /// List of nested blocks specifying the logical clauses to evaluate
        /// </summary>
        public InputList<Inputs.SegmentRuleClauseGetArgs> Clauses
        {
            get => _clauses ?? (_clauses = new InputList<Inputs.SegmentRuleClauseGetArgs>());
            set => _clauses = value;
        }

        /// <summary>
        /// The context kind associated with this segment rule. This argument is only valid if `weight` is also specified. If omitted, defaults to `user`.
        /// </summary>
        [Input("rolloutContextKind")]
        public Input<string>? RolloutContextKind { get; set; }

        /// <summary>
        /// The integer weight of the rule (between 1 and 100000).
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public SegmentRuleGetArgs()
        {
        }
        public static new SegmentRuleGetArgs Empty => new SegmentRuleGetArgs();
    }
}
