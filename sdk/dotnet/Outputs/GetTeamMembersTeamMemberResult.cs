// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Launchdarkly.Outputs
{

    [OutputType]
    public sealed class GetTeamMembersTeamMemberResult
    {
        /// <summary>
        /// The list of custom roles keys associated with the team member. Custom roles are only available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact LaunchDarkly Sales](https://launchdarkly.com/contact-sales/).
        /// </summary>
        public readonly ImmutableArray<string> CustomRoles;
        /// <summary>
        /// The unique email address associated with the team member.
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// The team member's given name.
        /// </summary>
        public readonly string FirstName;
        /// <summary>
        /// The 24 character alphanumeric ID of the team member.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The team member's family name.
        /// </summary>
        public readonly string LastName;
        /// <summary>
        /// The role associated with team member. Possible roles are `owner`, `reader`, `writer`, or `admin`.
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// A role attributes block. One block must be defined per role attribute. The key is the role attribute key and the value is a string array of resource keys that apply.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTeamMembersTeamMemberRoleAttributeResult> RoleAttributes;

        [OutputConstructor]
        private GetTeamMembersTeamMemberResult(
            ImmutableArray<string> customRoles,

            string email,

            string firstName,

            string id,

            string lastName,

            string role,

            ImmutableArray<Outputs.GetTeamMembersTeamMemberRoleAttributeResult> roleAttributes)
        {
            CustomRoles = customRoles;
            Email = email;
            FirstName = firstName;
            Id = id;
            LastName = lastName;
            Role = role;
            RoleAttributes = roleAttributes;
        }
    }
}
