// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Launchdarkly.Outputs
{

    [OutputType]
    public sealed class GetFeatureFlagEnvironmentRuleResult
    {
        /// <summary>
        /// Group percentage rollout by a custom attribute. This argument is only valid if `rollout_weights` is also specified.
        /// </summary>
        public readonly string? BucketBy;
        /// <summary>
        /// List of nested blocks specifying the logical clauses to evaluate
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFeatureFlagEnvironmentRuleClauseResult> Clauses;
        /// <summary>
        /// The context kind associated with the specified rollout. This argument is only valid if `rollout_weights` is also specified. Defaults to `user` if omitted.
        /// </summary>
        public readonly string? ContextKind;
        /// <summary>
        /// A human-readable description of the targeting rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// List of integer percentage rollout weights (in thousandths of a percent) to apply to each variation if the rule clauses evaluates to `true`. The sum of the `rollout_weights` must equal 100000 and the number of rollout weights specified in the array must match the number of flag variations. You must specify either `variation` or `rollout_weights`.
        /// </summary>
        public readonly ImmutableArray<int> RolloutWeights;
        /// <summary>
        /// The integer variation index to serve if the rule clauses evaluate to `true`. You must specify either `variation` or `rollout_weights`
        /// </summary>
        public readonly int? Variation;

        [OutputConstructor]
        private GetFeatureFlagEnvironmentRuleResult(
            string? bucketBy,

            ImmutableArray<Outputs.GetFeatureFlagEnvironmentRuleClauseResult> clauses,

            string? contextKind,

            string? description,

            ImmutableArray<int> rolloutWeights,

            int? variation)
        {
            BucketBy = bucketBy;
            Clauses = clauses;
            ContextKind = contextKind;
            Description = description;
            RolloutWeights = rolloutWeights;
            Variation = variation;
        }
    }
}
