// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Launchdarkly
{
    /// <summary>
    /// Provides a LaunchDarkly Data Export Destination resource.
    /// 
    /// &gt; **Note:** Data Export is available to customers on an Enterprise LaunchDarkly plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact LaunchDarkly Sales](https://launchdarkly.com/contact-sales/).
    /// 
    /// Data Export Destinations are locations that receive exported data. This resource allows you to configure destinations for the export of raw analytics data, including feature flag requests, analytics events, custom events, and more.
    /// 
    /// To learn more about data export, read [Data Export Documentation](https://docs.launchdarkly.com/integrations/data-export).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Launchdarkly = Pulumi.Launchdarkly;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Currently the following five types of destinations are available: kinesis, google-pubsub, mparticle, azure-event-hubs, and segment. Please note that config fields will vary depending on which destination you are trying to configure / access.
    ///     var kinesisExample = new Launchdarkly.Destination("kinesis_example", new()
    ///     {
    ///         ProjectKey = "example-project",
    ///         EnvKey = "example-env",
    ///         Name = "example-kinesis-dest",
    ///         Kind = "kinesis",
    ///         Config = 
    ///         {
    ///             { "region", "us-east-1" },
    ///             { "role_arn", "arn:aws:iam::123456789012:role/marketingadmin" },
    ///             { "stream_name", "cat-stream" },
    ///         },
    ///         On = true,
    ///         Tags = new[]
    ///         {
    ///             "terraform",
    ///         },
    ///     });
    /// 
    ///     var pubsubExample = new Launchdarkly.Destination("pubsub_example", new()
    ///     {
    ///         ProjectKey = "example-project",
    ///         EnvKey = "example-env",
    ///         Name = "example-pubsub-dest",
    ///         Kind = "google-pubsub",
    ///         Config = 
    ///         {
    ///             { "project", "example-pub-sub-project" },
    ///             { "topic", "example-topic" },
    ///         },
    ///         On = true,
    ///         Tags = new[]
    ///         {
    ///             "terraform",
    ///         },
    ///     });
    /// 
    ///     var mparticleExample = new Launchdarkly.Destination("mparticle_example", new()
    ///     {
    ///         ProjectKey = "example-project",
    ///         EnvKey = "example-env",
    ///         Name = "example-mparticle-dest",
    ///         Kind = "mparticle",
    ///         Config = 
    ///         {
    ///             { "api_key", "apiKeyfromMParticle" },
    ///             { "secret", "mParticleSecret" },
    ///             { "user_identities", JsonSerializer.Serialize(new[]
    ///             {
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["ldContextKind"] = "user",
    ///                     ["mparticleUserIdentity"] = "customer_id",
    ///                 },
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["ldContextKind"] = "device",
    ///                     ["mparticleUserIdentity"] = "google",
    ///                 },
    ///             }) },
    ///             { "environment", "production" },
    ///         },
    ///         On = true,
    ///         Tags = new[]
    ///         {
    ///             "terraform",
    ///         },
    ///     });
    /// 
    ///     var azureExample = new Launchdarkly.Destination("azure_example", new()
    ///     {
    ///         ProjectKey = "example-project",
    ///         EnvKey = "example-env",
    ///         Name = "example-azure-event-hubs-dest",
    ///         Kind = "azure-event-hubs",
    ///         Config = 
    ///         {
    ///             { "namespace", "example-azure-namespace" },
    ///             { "name", "example-azure-name" },
    ///             { "policy_name", "example-policy-name" },
    ///             { "policy_key", "azure-event-hubs-policy-key" },
    ///         },
    ///         On = true,
    ///         Tags = new[]
    ///         {
    ///             "terraform",
    ///         },
    ///     });
    /// 
    ///     var segmentExample = new Launchdarkly.Destination("segment_example", new()
    ///     {
    ///         ProjectKey = "example-project",
    ///         EnvKey = "example-env",
    ///         Name = "example-segment-dest",
    ///         Kind = "segment",
    ///         Config = 
    ///         {
    ///             { "write_key", "segment-write-key" },
    ///             { "user_id_context_kind", "user" },
    ///             { "anonymous_id_context_kind", "anonymousUser" },
    ///         },
    ///         On = true,
    ///         Tags = new[]
    ///         {
    ///             "terraform",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// You can import a data export destination using the destination's full ID in the format `project_key/environment_key/id`.
    /// 
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import launchdarkly:index/destination:Destination example example-project/example-env/57c0af609969090743529967
    /// ```
    /// </summary>
    [LaunchdarklyResourceType("launchdarkly:index/destination:Destination")]
    public partial class Destination : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The destination-specific configuration. To learn more, read Destination-Specific Configs
        /// </summary>
        [Output("config")]
        public Output<ImmutableDictionary<string, string>> Config { get; private set; } = null!;

        /// <summary>
        /// The environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
        /// </summary>
        [Output("envKey")]
        public Output<string> EnvKey { get; private set; } = null!;

        /// <summary>
        /// The data export destination type. Available choices are `kinesis`, `google-pubsub`, `mparticle`, `azure-event-hubs`, and `segment`. A change in this field will force the destruction of the existing resource and the creation of a new one.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// A human-readable name for your data export destination.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether the data export destination is on or not.
        /// </summary>
        [Output("on")]
        public Output<bool?> On { get; private set; } = null!;

        /// <summary>
        /// The LaunchDarkly project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
        /// </summary>
        [Output("projectKey")]
        public Output<string> ProjectKey { get; private set; } = null!;

        /// <summary>
        /// Tags associated with your resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Destination resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Destination(string name, DestinationArgs args, CustomResourceOptions? options = null)
            : base("launchdarkly:index/destination:Destination", name, args ?? new DestinationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Destination(string name, Input<string> id, DestinationState? state = null, CustomResourceOptions? options = null)
            : base("launchdarkly:index/destination:Destination", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/primait/pulumi-launchdarkly",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Destination resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Destination Get(string name, Input<string> id, DestinationState? state = null, CustomResourceOptions? options = null)
        {
            return new Destination(name, id, state, options);
        }
    }

    public sealed class DestinationArgs : global::Pulumi.ResourceArgs
    {
        [Input("config", required: true)]
        private InputMap<string>? _config;

        /// <summary>
        /// The destination-specific configuration. To learn more, read Destination-Specific Configs
        /// </summary>
        public InputMap<string> Config
        {
            get => _config ?? (_config = new InputMap<string>());
            set => _config = value;
        }

        /// <summary>
        /// The environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
        /// </summary>
        [Input("envKey", required: true)]
        public Input<string> EnvKey { get; set; } = null!;

        /// <summary>
        /// The data export destination type. Available choices are `kinesis`, `google-pubsub`, `mparticle`, `azure-event-hubs`, and `segment`. A change in this field will force the destruction of the existing resource and the creation of a new one.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// A human-readable name for your data export destination.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the data export destination is on or not.
        /// </summary>
        [Input("on")]
        public Input<bool>? On { get; set; }

        /// <summary>
        /// The LaunchDarkly project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
        /// </summary>
        [Input("projectKey", required: true)]
        public Input<string> ProjectKey { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags associated with your resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public DestinationArgs()
        {
        }
        public static new DestinationArgs Empty => new DestinationArgs();
    }

    public sealed class DestinationState : global::Pulumi.ResourceArgs
    {
        [Input("config")]
        private InputMap<string>? _config;

        /// <summary>
        /// The destination-specific configuration. To learn more, read Destination-Specific Configs
        /// </summary>
        public InputMap<string> Config
        {
            get => _config ?? (_config = new InputMap<string>());
            set => _config = value;
        }

        /// <summary>
        /// The environment key. A change in this field will force the destruction of the existing resource and the creation of a new one.
        /// </summary>
        [Input("envKey")]
        public Input<string>? EnvKey { get; set; }

        /// <summary>
        /// The data export destination type. Available choices are `kinesis`, `google-pubsub`, `mparticle`, `azure-event-hubs`, and `segment`. A change in this field will force the destruction of the existing resource and the creation of a new one.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// A human-readable name for your data export destination.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the data export destination is on or not.
        /// </summary>
        [Input("on")]
        public Input<bool>? On { get; set; }

        /// <summary>
        /// The LaunchDarkly project key. A change in this field will force the destruction of the existing resource and the creation of a new one.
        /// </summary>
        [Input("projectKey")]
        public Input<string>? ProjectKey { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags associated with your resource.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public DestinationState()
        {
        }
        public static new DestinationState Empty => new DestinationState();
    }
}
