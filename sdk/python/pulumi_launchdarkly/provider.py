# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['ProviderArgs', 'Provider']

@pulumi.input_type
class ProviderArgs:
    def __init__(__self__, *,
                 access_token: Optional[pulumi.Input[str]] = None,
                 api_host: Optional[pulumi.Input[str]] = None,
                 http_timeout: Optional[pulumi.Input[int]] = None,
                 oauth_token: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Provider resource.
        :param pulumi.Input[str] access_token: The [personal access token](https://docs.launchdarkly.com/home/account-security/api-access-tokens#personal-tokens) or
               [service token](https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens) used to
               authenticate with LaunchDarkly. You can also set this with the `LAUNCHDARKLY_ACCESS_TOKEN` environment variable. You
               must provide either `access_token` or `oauth_token`.
        :param pulumi.Input[str] api_host: The LaunchDarkly host address. If this argument is not specified, the default host address is
               `https://app.launchdarkly.com`
        :param pulumi.Input[int] http_timeout: The HTTP timeout (in seconds) when making API calls to LaunchDarkly.
        :param pulumi.Input[str] oauth_token: An OAuth V2 token you use to authenticate with LaunchDarkly. You can also set this with the `LAUNCHDARKLY_OAUTH_TOKEN`
               environment variable. You must provide either `access_token` or `oauth_token`.
        """
        if access_token is not None:
            pulumi.set(__self__, "access_token", access_token)
        if api_host is not None:
            pulumi.set(__self__, "api_host", api_host)
        if http_timeout is not None:
            pulumi.set(__self__, "http_timeout", http_timeout)
        if oauth_token is not None:
            pulumi.set(__self__, "oauth_token", oauth_token)

    @property
    @pulumi.getter(name="accessToken")
    def access_token(self) -> Optional[pulumi.Input[str]]:
        """
        The [personal access token](https://docs.launchdarkly.com/home/account-security/api-access-tokens#personal-tokens) or
        [service token](https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens) used to
        authenticate with LaunchDarkly. You can also set this with the `LAUNCHDARKLY_ACCESS_TOKEN` environment variable. You
        must provide either `access_token` or `oauth_token`.
        """
        return pulumi.get(self, "access_token")

    @access_token.setter
    def access_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "access_token", value)

    @property
    @pulumi.getter(name="apiHost")
    def api_host(self) -> Optional[pulumi.Input[str]]:
        """
        The LaunchDarkly host address. If this argument is not specified, the default host address is
        `https://app.launchdarkly.com`
        """
        return pulumi.get(self, "api_host")

    @api_host.setter
    def api_host(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "api_host", value)

    @property
    @pulumi.getter(name="httpTimeout")
    def http_timeout(self) -> Optional[pulumi.Input[int]]:
        """
        The HTTP timeout (in seconds) when making API calls to LaunchDarkly.
        """
        return pulumi.get(self, "http_timeout")

    @http_timeout.setter
    def http_timeout(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "http_timeout", value)

    @property
    @pulumi.getter(name="oauthToken")
    def oauth_token(self) -> Optional[pulumi.Input[str]]:
        """
        An OAuth V2 token you use to authenticate with LaunchDarkly. You can also set this with the `LAUNCHDARKLY_OAUTH_TOKEN`
        environment variable. You must provide either `access_token` or `oauth_token`.
        """
        return pulumi.get(self, "oauth_token")

    @oauth_token.setter
    def oauth_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oauth_token", value)


class Provider(pulumi.ProviderResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 access_token: Optional[pulumi.Input[str]] = None,
                 api_host: Optional[pulumi.Input[str]] = None,
                 http_timeout: Optional[pulumi.Input[int]] = None,
                 oauth_token: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        The provider type for the launchdarkly package. By default, resources use package-wide configuration
        settings, however an explicit `Provider` instance may be created and passed during resource
        construction to achieve fine-grained programmatic control over provider settings. See the
        [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] access_token: The [personal access token](https://docs.launchdarkly.com/home/account-security/api-access-tokens#personal-tokens) or
               [service token](https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens) used to
               authenticate with LaunchDarkly. You can also set this with the `LAUNCHDARKLY_ACCESS_TOKEN` environment variable. You
               must provide either `access_token` or `oauth_token`.
        :param pulumi.Input[str] api_host: The LaunchDarkly host address. If this argument is not specified, the default host address is
               `https://app.launchdarkly.com`
        :param pulumi.Input[int] http_timeout: The HTTP timeout (in seconds) when making API calls to LaunchDarkly.
        :param pulumi.Input[str] oauth_token: An OAuth V2 token you use to authenticate with LaunchDarkly. You can also set this with the `LAUNCHDARKLY_OAUTH_TOKEN`
               environment variable. You must provide either `access_token` or `oauth_token`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ProviderArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The provider type for the launchdarkly package. By default, resources use package-wide configuration
        settings, however an explicit `Provider` instance may be created and passed during resource
        construction to achieve fine-grained programmatic control over provider settings. See the
        [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.

        :param str resource_name: The name of the resource.
        :param ProviderArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProviderArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 access_token: Optional[pulumi.Input[str]] = None,
                 api_host: Optional[pulumi.Input[str]] = None,
                 http_timeout: Optional[pulumi.Input[int]] = None,
                 oauth_token: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProviderArgs.__new__(ProviderArgs)

            __props__.__dict__["access_token"] = access_token
            __props__.__dict__["api_host"] = api_host
            __props__.__dict__["http_timeout"] = pulumi.Output.from_input(http_timeout).apply(pulumi.runtime.to_json) if http_timeout is not None else None
            __props__.__dict__["oauth_token"] = oauth_token
        super(Provider, __self__).__init__(
            'launchdarkly',
            resource_name,
            __props__,
            opts)

    @property
    @pulumi.getter(name="accessToken")
    def access_token(self) -> pulumi.Output[Optional[str]]:
        """
        The [personal access token](https://docs.launchdarkly.com/home/account-security/api-access-tokens#personal-tokens) or
        [service token](https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens) used to
        authenticate with LaunchDarkly. You can also set this with the `LAUNCHDARKLY_ACCESS_TOKEN` environment variable. You
        must provide either `access_token` or `oauth_token`.
        """
        return pulumi.get(self, "access_token")

    @property
    @pulumi.getter(name="apiHost")
    def api_host(self) -> pulumi.Output[Optional[str]]:
        """
        The LaunchDarkly host address. If this argument is not specified, the default host address is
        `https://app.launchdarkly.com`
        """
        return pulumi.get(self, "api_host")

    @property
    @pulumi.getter(name="oauthToken")
    def oauth_token(self) -> pulumi.Output[Optional[str]]:
        """
        An OAuth V2 token you use to authenticate with LaunchDarkly. You can also set this with the `LAUNCHDARKLY_OAUTH_TOKEN`
        environment variable. You must provide either `access_token` or `oauth_token`.
        """
        return pulumi.get(self, "oauth_token")

